# Generated by Django 5.2.4 on 2025-07-09 22:11

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('accounting', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Group',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Nombre del grupo', max_length=100)),
                ('description', models.TextField(blank=True, help_text='Descripción del grupo')),
            ],
            options={
                'verbose_name': 'Grupo',
                'verbose_name_plural': 'Grupos',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Client',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('person_type', models.CharField(choices=[('NATURAL', 'Persona Natural'), ('JURIDICA', 'Persona Jurídica')], default='NATURAL', help_text='Indica si el contacto es una persona física o una empresa', max_length=10)),
                ('razon_social', models.CharField(help_text='Para empresas: Razón Social completa. Para personas físicas: Nombre y Apellidos completos.', max_length=255)),
                ('nombre_comercial', models.CharField(blank=True, help_text='Nombre comercial o alias con el que se conoce al contacto (opcional).', max_length=255)),
                ('id_type', models.CharField(choices=[('NIF', 'NIF'), ('CIF', 'CIF'), ('NIE', 'NIE'), ('PASSPORT', 'Pasaporte'), ('DRIVERS_LICENSE', 'Licencia de conducir'), ('SOCIAL_SECURITY_CARD', 'Tarjeta de Seguridad Social')], default='NIF', help_text='Tipo de documento', max_length=20)),
                ('id_number', models.CharField(help_text='Número de documento', max_length=20)),
                ('address', models.CharField(blank=True, help_text='Dirección del cliente', max_length=100)),
                ('city', models.CharField(blank=True, help_text='Ciudad del cliente', max_length=50)),
                ('province', models.CharField(blank=True, help_text='Provincia del cliente', max_length=50)),
                ('zip_code', models.CharField(blank=True, help_text='Código postal del cliente', max_length=5)),
                ('country', models.CharField(blank=True, help_text='País del cliente', max_length=50)),
                ('phone', models.CharField(blank=True, help_text='Teléfono del cliente', max_length=15)),
                ('email', models.EmailField(blank=True, help_text='Email del cliente', max_length=254)),
                ('notes', models.TextField(blank=True, help_text='Notas del cliente')),
                ('default_irpf_tax', models.ForeignKey(blank=True, help_text='IRPF por defecto', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='default_irpf_tax_client', to='accounting.tax')),
                ('default_iva_tax', models.ForeignKey(blank=True, help_text='IVA por defecto', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='default_iva_tax_client', to='accounting.tax')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('group', models.ForeignKey(blank=True, help_text='Grupo al que pertenece el cliente', null=True, on_delete=django.db.models.deletion.SET_NULL, to='contact.group')),
            ],
            options={
                'verbose_name': 'Cliente',
                'verbose_name_plural': 'Clientes',
                'constraints': [models.UniqueConstraint(fields=('user', 'id_number'), name='unique_client_id_per_user')],
            },
        ),
        migrations.CreateModel(
            name='Provider',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('person_type', models.CharField(choices=[('NATURAL', 'Persona Natural'), ('JURIDICA', 'Persona Jurídica')], default='NATURAL', help_text='Indica si el contacto es una persona física o una empresa', max_length=10)),
                ('razon_social', models.CharField(help_text='Para empresas: Razón Social completa. Para personas físicas: Nombre y Apellidos completos.', max_length=255)),
                ('nombre_comercial', models.CharField(blank=True, help_text='Nombre comercial o alias con el que se conoce al contacto (opcional).', max_length=255)),
                ('id_type', models.CharField(choices=[('NIF', 'NIF'), ('CIF', 'CIF'), ('NIE', 'NIE'), ('PASSPORT', 'Pasaporte'), ('DRIVERS_LICENSE', 'Licencia de conducir'), ('SOCIAL_SECURITY_CARD', 'Tarjeta de Seguridad Social')], default='NIF', help_text='Tipo de documento', max_length=20)),
                ('id_number', models.CharField(help_text='Número de documento', max_length=20)),
                ('address', models.CharField(blank=True, help_text='Dirección del cliente', max_length=100)),
                ('city', models.CharField(blank=True, help_text='Ciudad del cliente', max_length=50)),
                ('province', models.CharField(blank=True, help_text='Provincia del cliente', max_length=50)),
                ('zip_code', models.CharField(blank=True, help_text='Código postal del cliente', max_length=5)),
                ('country', models.CharField(blank=True, help_text='País del cliente', max_length=50)),
                ('phone', models.CharField(blank=True, help_text='Teléfono del cliente', max_length=15)),
                ('email', models.EmailField(blank=True, help_text='Email del cliente', max_length=254)),
                ('notes', models.TextField(blank=True, help_text='Notas del cliente')),
                ('group', models.ForeignKey(blank=True, help_text='Grupo al que pertenece el cliente', null=True, on_delete=django.db.models.deletion.SET_NULL, to='contact.group')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Proveedor',
                'verbose_name_plural': 'Proveedores',
                'constraints': [models.UniqueConstraint(fields=('user', 'id_number'), name='unique_provider_id_per_user')],
            },
        ),
    ]
